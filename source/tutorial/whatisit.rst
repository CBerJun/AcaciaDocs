Acacia 究竟是什么
==========================

命令和行为包
---------------

你可能知道，Minecraft 中有一个叫“命令”的东西，它其实就相当于作弊码，能够控制这个世界中的东西。在聊天栏输入\ ``/``\ 之后再输入命令就可以执行它。例如，\ ``/weather clear`` 可以将天气设置为晴天。这样的命令还有很多很多，将它们组合起来就可以实现非常复杂的功能，例如一个俄罗斯方块小游戏。
“行为包”是 Minecraft 基岩版提供的另一种修改游戏的方式，它可以实现自定义物品、生物等功能，其中，有一个功能是允许\ **把命令写成文件**\ ，然后在聊天栏中只需要使用 ``/function`` 命令就可以运行文件中的所有命令。这样一来，只需把项目命令写入行为包，之后用户发送一条命令就能启动行为包内的功能。

.. seealso::

    :mcwiki:`命令`
        了解更多有关命令的知识。

    :mcwiki:`基岩版函数`
        了解函数，即行为包中写成文件的命令。

命令编译器
-------------

开发者们于是用命令做了很多好玩的项目。但是，命令的设计繁琐而不易维护，且涉及到特性很多的系统，比如 ``/execute``\ 、\ ``/scoreboard`` 等。直到有一天，一个聪明的开发者（Acacia 不是第一个这样的项目）想到: 为什么不创造一个\ **对开发者更友好**\ 的语言，然后用一个程序来自动把这个好用的语言写的代码\ **转换**\ 成 Minecraft 可执行的命令，然后写入行为包来导入世界呢？

Acacia 就是一门这样的语言。把 Acacia 代码转换为命令的程序就叫“编译器”。在 Acacia 进行数字运算::

    answer = (x + y) * z / 2

同样的东西用命令写就会变成:

.. code-block:: mcfunction

    scoreboard players operation answer s = x s
    scoreboard players operation  s += y s
    scoreboard players operation answer s *= z s
    scoreboard players set tmp s 2
    scoreboard players operation answer s /= tmp s

编译器的魔法就在于: **它能把上面这一行 Acacia 代码转换成下面的这么多命令**\ ，然后在世界中运行。如此一来，作为开发者的你，只需要写上面这一行可读性高的代码，而 Acacia 编译器会帮你把它转成命令来运行。

.. note::

    如果你对命令比较熟悉，Acacia 能够帮你:

    * 完全管理 ``/scoreboard``\ ，取而代之的是变量系统
    * 完全管理 ``/execute``\ 的各种子命令
    * 提供非常丰富的编译时常量和迭代，无需自己写重复度高的命令，同时提高可维护性
    * 让项目结构更加清晰，大幅减少文件和代码量: 提供分支、循环、函数、结构体

总的来说，使用 Acacia 相比用指令开发效率高，项目也更便于维护，且不需要命令基础即可学习。
